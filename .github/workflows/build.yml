name: bluebuild
on:
  schedule:
    - cron: "00 7 * * *" # build at 7:00 UTC every day 
                          # (ublue images start building at 05:04 UTC)
  push:
    paths-ignore: # don't rebuild if only documentation has changed
      - "**.md"
    branches:
      - main     
  pull_request:

  workflow_dispatch: # allow manually triggering builds

permissions:
  contents: write  # Grant write permission to contents

jobs:
  daily-image-builds:
    name: Build Custom Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false # stop GH from cancelling all matrix builds if one fails
      matrix:
        recipe:
          # !! Add your recipes here 
          - tacos-os.yml
    steps:
       # the build is fully handled by the reusable github action
      - name: Build Custom Image
        uses: blue-build/github-action@v1.5
        with:
          recipe: ${{ matrix.recipe }}
          cosign_private_key: ${{ secrets.SIGNING_SECRET }}
          registry_token: ${{ github.token }}
          pr_event_number: ${{ github.event.number }}

############################################################################################################

# Dont touch above this line, that part works..
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Timestamp
        id: set-timestamp
        run: vars.IMAGE_VERSION=$(date -u +"%Y%m%d%H%M%S")

      - name: Create Tag
        id: tag
        run: |
          TAG_NAME=tacos-os-latest
          git config --global user.email "dave@codeandbeer.net"
          git config --global user.name "robotictacos"
          git tag ${{ vars.IMAGE_VERSION }} -m "Automated build"
          git push origin ${{ vars.IMAGE_VERSION }}
          echo "::set-output name=tag::${{ vars.IMAGE_VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: Release ${{ steps.tag.outputs.tag }}
          body: "Automated release"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}